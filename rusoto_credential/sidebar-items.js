initSidebarItems({"enum":[["Variable","Variable is an abstraction over parameters to credential providers, allowing to abstract on how (source) and when (time) parameter values are resolved. A lot of credentials providers use external information sources such as environment variables or files to obtain parameter values needed to produce AWS credentials."]],"mod":[["claims","Credential Claims module."]],"struct":[["AutoRefreshingProvider","Wrapper for `ProvideAwsCredentials` that caches the credentials returned by the wrapped provider.  Each time the credentials are accessed, they are checked to see if they have expired, in which case they are retrieved from the wrapped provider again."],["AwsCredentials","AWS API access credentials, including access key, secret key, token (for IAM profiles), expiration timestamp, and claims from federated login."],["ChainProvider","Provides AWS credentials from multiple possible sources using a priority order."],["ContainerProvider","Provides AWS credentials from a task's IAM role."],["CredentialsError","Represents an Error that has occured during the fetching Credentials Phase."],["DefaultCredentialsProvider","Wraps a `ChainProvider` in an `AutoRefreshingProvider`."],["EnvironmentProvider","Provides AWS credentials from environment variables."],["InstanceMetadataProvider","Provides AWS credentials from a resource's IAM role."],["ProfileProvider","Provides AWS credentials from a profile in a credentials file, or from a credential process."],["Secret","Newtype (pattern) to protect secret credentials stored as Strings."],["StaticProvider","Provides AWS credentials from statically/programmatically provided strings."]],"trait":[["Anonymous","Representation of anonymity"],["ProvideAwsCredentials","A trait for types that produce `AwsCredentials`."]]});